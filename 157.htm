<html>

<head>
  <title>28.1 Userdata - Lua程序设计</title>
  <meta http-equiv=Content-Type content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="default.css" type="text/css" />
</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="moHeader">&nbsp;28.1 Userdata</td>
    </tr>
  </table>
  
  <p></p>

<div class=Section1 style='layout-grid:15.6pt'>



<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>我们首先关心的是如何在</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>中表示数组的值。</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>为这种情况提供专门提供一个基本的类型：</span><span
lang=EN-US>userdata</span><span style='font-family:宋体'>。一个</span><span
lang=EN-US>userdatum</span><span style='font-family:宋体'>提供了一个在</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>中没有预定义操作的</span><span
lang=EN-US>raw</span><span style='font-family:宋体'>内存区域。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Lua API</span><span
style='font-family:宋体'>提供了下面的函数用来创建一个</span><span lang=EN-US>userdatum</span><span
style='font-family:宋体'>：</span></p>

<div style='border:RGB(237,159,13) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(244,226,252)'><span
lang=EN-US style='color:blue'>void</span><span lang=EN-US> *lua_newuserdata
(lua_State *L, size_t size);</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>lua_newuserdata</span><span
style='font-family:宋体'>函数按照指定的大小分配一块内存，将对应的</span><span lang=EN-US>userdatum</span><span
style='font-family:宋体'>放到栈内，并返回内存块的地址。如果出于某些原因你需要通过其他的方法分配内存的话，很容易创建一个指针大小的</span><span
lang=EN-US>userdatum</span><span style='font-family:宋体'>，然后将指向实际内存块的指针保存到</span><span
lang=EN-US>userdatum</span><span style='font-family:宋体'>里。我们将在下一章看到这种技术的例子。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>使用</span><span
lang=EN-US>lua_newuserdata</span><span style='font-family:宋体'>函数，创建新数组的函数实现如下：</span></p>

<div style='border:RGB(237,159,13) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(252,238,227)'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> <span
style='color:blue'>int</span> newarray (lua_State *L) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>int</span> n =
luaL_checkint(L, 1);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(246,231,246)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; size_t nbytes = <span style='color:blue'>sizeof</span>(NumArray)
+ (n - 1)*<span style='color:blue'>sizeof</span>(<span style='color:blue'>double</span>);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; NumArray *a = (NumArray *)lua_newuserdata(L,
nbytes);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(235,226,237)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; a-&gt;size = n;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> 1;&nbsp; <span
style='color:green'>/* new userdatum is already on the stack */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(226,250,251)'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>（函数</span><span
lang=EN-US>luaL_checkint</span><span style='font-family:宋体'>是用来检查整数的</span><span
lang=EN-US>luaL_checknumber</span><span style='font-family:宋体'>的变体）一旦</span><span
lang=EN-US>newarray</span><span style='font-family:宋体'>在</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>中被注册之后，你就可以使用类似</span><span
lang=EN-US>a = array.new(1000)</span><span style='font-family:宋体'>的语句创建一个新的数组了。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>为了存储元素，我们使用类似</span><span
lang=EN-US>array.set(array, index, value)</span><span style='font-family:宋体'>调用，后面我们将看到如何使用</span><span
lang=EN-US>metatables</span><span style='font-family:宋体'>来支持常规的写法</span><span
lang=EN-US>array[index] = value</span><span style='font-family:宋体'>。对于这两种写法，下面的函数是一样的，数组下标从１开始：</span></p>

<div style='border:RGB(237,159,13) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(224,228,252)'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> <span
style='color:blue'>int</span> setarray (lua_State *L) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; NumArray *a = (NumArray *)lua_touserdata(L, 1);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(251,237,245)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>int</span> index =
luaL_checkint(L, 2);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>double</span> value =
luaL_checknumber(L, 3);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(241,248,229)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; luaL_argcheck(L, a != NULL, 1, <span
style='color:red'>&quot;`array' expected&quot;</span>);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(254,234,245)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; luaL_argcheck(L, 1 &lt;= index &amp;&amp; index
&lt;= a-&gt;size, 2,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(244,249,228)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:red'>&quot;index out of range&quot;</span>);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(228,235,243)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; a-&gt;values[index-1] = value;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> 0;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(241,235,248)'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>luaL_argcheck</span><span
style='font-family:宋体'>函数检查给定的条件，如果有必要的话抛出错误。因此，如果我们使用错误的参数调用</span><span
lang=EN-US>setarray</span><span style='font-family:宋体'>，我们将得到一个错误信息：</span></p>

<div style='border:RGB(237,159,13) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(229,237,253)'><span
lang=EN-US>array.set(a, 11, 0)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:green'>--&gt; stdin:1: bad argument #1 to 'set'
('array' expected)</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>下面的函数获取一个数组元素：</span></p>

<div style='border:RGB(237,159,13) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(235,221,231);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> <span
style='color:blue'>int</span> getarray (lua_State *L) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(249,240,248)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; NumArray *a = (NumArray *)lua_touserdata(L, 1);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>int</span> index =
luaL_checkint(L, 2);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(223,244,254)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; luaL_argcheck(L, a != NULL, 1, <span
style='color:red'>&quot;'array' expected&quot;</span>);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(252,229,241)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; luaL_argcheck(L, 1 &lt;= index &amp;&amp; index
&lt;= a-&gt;size, 2,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(248,226,249)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:red'>&quot;index out of range&quot;</span>);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(226,248,254)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; lua_pushnumber(L, a-&gt;values[index-1]);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> 1;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(227,238,227)'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>我们定义另一个函数来获取数组的大小：</span></p>

<div style='border:RGB(237,159,13) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(224,234,227)'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> <span
style='color:blue'>int</span> getsize (lua_State *L) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; NumArray *a = (NumArray *)lua_touserdata(L, 1);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(245,255,252)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; luaL_argcheck(L, a != NULL, 1, <span
style='color:red'>&quot;`array' expected&quot;</span>);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; lua_pushnumber(L, a-&gt;size);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(232,239,234)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> 1;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>最后，我们需要一些额外的代码来初始化我们的库：</span></p>

<div style='border:RGB(237,159,13) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(242,238,234);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> <span
style='color:blue'>const</span> <span style='color:blue'>struct</span> luaL_reg
arraylib [] = {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(246,222,249)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; {<span style='color:red'>&quot;new&quot;</span>,
newarray},</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; {<span style='color:red'>&quot;set&quot;</span>,
setarray},</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(239,248,227)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; {<span style='color:red'>&quot;get&quot;</span>,
getarray},</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; {<span style='color:red'>&quot;size&quot;</span>,
getsize},</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(250,243,253)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; {NULL, NULL}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>};</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(237,244,255)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US> luaopen_array
(lua_State *L) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(220,252,253)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; luaL_openlib(L, <span style='color:red'>&quot;array&quot;</span>,
arraylib, 0);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> 1;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(228,232,252)'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>这儿我们再次使用了辅助库的</span><span
lang=EN-US>luaL_openlib</span><span style='font-family:宋体'>函数，他根据给定的名字创建一个表，并使用</span><span
lang=EN-US>arraylib</span><span style='font-family:宋体'>数组中的</span><span
lang=EN-US>name-function</span><span style='font-family:宋体'>对填充这个表。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>打开上面定义的库之后，我们就可以在</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>中使用我们新定义的类型了：</span></p>

<div style='border:RGB(237,159,13) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(245,241,248)'><span
lang=EN-US>a = array.<span style='color:blue'>new</span>(1000)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;
userdata: 0x8064d48</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(236,240,250)'><span
lang=EN-US>print(array.size(a))&nbsp;&nbsp;&nbsp;&nbsp; --&gt; 1000</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US> i=1,1000 <span
style='color:blue'>do</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(245,222,242)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; array.set(a, i, 1/i)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(225,253,243)'><span
lang=EN-US>print(array.get(a, 10))&nbsp; --&gt; 0.1</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>在一个</span><span
lang=EN-US>Pentium/Linux</span><span style='font-family:宋体'>环境中运行这个程序，一个有</span><span
lang=EN-US>100K</span><span style='font-family:宋体'>元素的数组大概占用</span><span
lang=EN-US>800KB</span><span style='font-family:宋体'>的内存，同样的条件由</span><span
lang=EN-US>Lua </span><span style='font-family:宋体'>表实现的数组需要</span><span
lang=EN-US>1.5MB</span><span style='font-family:宋体'>的内存。</span></p>


</div>
  <p></p>
  <hr class="moHR" />
  <span class="moCopyright">
    相关链接：
<br /><a href=3.htm>lua程序设计目录</a> - <a href="http://www.luaer.cn">中国lua开发者</a> - <a href="http://bbs.luaer.cn">lua论坛</a> 
  </span><div id="bookfoot"></div>
<script language="JavaScript" src="js/ad.js"></script>
</body>

</html>

