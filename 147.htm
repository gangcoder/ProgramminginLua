<html>

<head>
  <title>26.1 C 函数 - Lua程序设计</title>
  <meta http-equiv=Content-Type content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="default.css" type="text/css" />
</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="moHeader">&nbsp;26.1 C 函数</td>
    </tr>
  </table>
  
  <p></p>

<div class=Section1 style='layout-grid:15.6pt'>



<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>先看一个简单的例子，如何实现一个简单的函数返回给定数值的</span><span
lang=EN-US>sin</span><span style='font-family:宋体'>值（更专业的实现应该检查他的参数是否为一个数字）：</span></p>

<div style='border:RGB(26,1,158) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(223,227,242)'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> <span
style='color:blue'>int</span> l_sin (lua_State *L) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>double</span> d =
lua_tonumber(L, 1);&nbsp; <span style='color:green'>/* get argument */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(236,240,254)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; lua_pushnumber(L, sin(d));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>/* push result */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> 1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>/* number of results */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(240,255,237)'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>任何在</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>中注册的函数必须有同样的原型，这个原型声明定义就是</span><span
lang=EN-US>lua.h</span><span style='font-family:宋体'>中的</span><span lang=EN-US>lua_CFunction</span><span
style='font-family:宋体'>：</span></p>

<div style='border:RGB(26,1,158) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(232,234,254)'><span
lang=EN-US style='color:blue'>typedef</span><span lang=EN-US> <span
style='color:blue'>int</span> (*lua_CFunction) (lua_State *L);</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>从</span><span
lang=EN-US>C</span><span style='font-family:宋体'>的角度来看，一个</span><span
lang=EN-US>C</span><span style='font-family:宋体'>函数接受单一的参数</span><span
lang=EN-US>Lua state</span><span style='font-family:宋体'>，返回一个表示返回值个数的数字。所以，函数在将返回值入栈之前不需要清理栈，函数返回之后，</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>自动的清除栈中返回结果下面的所有内容。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>我们要想在</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>使用这个函数，还必须首先注册这个函数。我们使用</span><span
lang=EN-US>lua_pushcfunction</span><span style='font-family:宋体'>来完成这个任务：他获取指向</span><span
lang=EN-US>C</span><span style='font-family:宋体'>函数的指针，并在</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>中创建一个</span><span lang=EN-US>function</span><span
style='font-family:宋体'>类型的值来表示这个函数。一个</span><span lang=EN-US>quick-and-dirty</span><span
style='font-family:宋体'>的解决方案是将这段代码直接放到</span><span lang=EN-US>lua.c</span><span
style='font-family:宋体'>文件中，并在调用</span><span lang=EN-US>lua_open</span><span
style='font-family:宋体'>后面适当的位置加上下面两行：</span></p>

<div style='border:RGB(26,1,158) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(226,249,229)'><span
lang=EN-US>lua_pushcfunction(l, l_sin);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>lua_setglobal(l, <span style='color:red'>&quot;mysin&quot;</span>);</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>第一行将类型为</span><span
lang=EN-US>function</span><span style='font-family:宋体'>的值入栈，第二行将</span><span
lang=EN-US>function</span><span style='font-family:宋体'>赋值给全局变量</span><span
lang=EN-US>mysin</span><span style='font-family:宋体'>。这样修改之后，重新编译</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>，你就可以在你的</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>程序中使用新的</span><span
lang=EN-US>mysin</span><span style='font-family:宋体'>函数了。在下面一节，我们将讨论以比较好的方法将新的</span><span
lang=EN-US>C</span><span style='font-family:宋体'>函数添加到</span><span lang=EN-US>Lua</span><span
style='font-family:宋体'>中去。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>对于稍微专业点的</span><span
lang=EN-US>sin</span><span style='font-family:宋体'>函数，我们必须检查</span><span
lang=EN-US>sin</span><span style='font-family:宋体'>的参数的类型。有一个辅助库中的</span><span
lang=EN-US>luaL_checknumber</span><span style='font-family:宋体'>函数可以检查给定的参数是否为数字：当有错误发生的时候，将抛出一个错误信息；否则返回作为参数的那个数字。将上面我们的函数稍作修改：</span></p>

<div style='border:RGB(26,1,158) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(239,237,232);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> <span
style='color:blue'>int</span> l_sin (lua_State *L) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(245,238,246)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>double</span> d =
luaL_checknumber(L, 1);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; lua_pushnumber(L, sin(d));</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(234,251,221)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> 1;&nbsp; <span
style='color:green'>/* number of results */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>根据上面的定义，如果你调用</span><span
lang=EN-US>mysin('a'),</span><span style='font-family:宋体'>会得到如下信息：</span></p>

<div style='border:dashed windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(248,254,231);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltP style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>bad argument #1 to 'mysin' (number expected, got string)</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>注意看看</span><span
lang=EN-US>luaL_checknumber</span><span style='font-family:宋体'>是如何自动使用：参数</span><span
lang=EN-US>number</span><span style='font-family:宋体'>（</span><span lang=EN-US>1</span><span
style='font-family:宋体'>），函数名（</span><span lang=EN-US>&quot;mysin&quot;</span><span
style='font-family:宋体'>），期望的参数类型（</span><span lang=EN-US>&quot;number&quot;</span><span
style='font-family:宋体'>），实际的参数类型（</span><span lang=EN-US>&quot;string&quot;</span><span
style='font-family:宋体'>）来拼接最终的错误信息的。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>下面看一个稍微复杂的例子：写一个返回给定目录内容的函数。</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>的标准库并没有提供这个函数，因为</span><span
lang=EN-US>ANSI C</span><span style='font-family:宋体'>没有可以实现这个功能的函数。在这儿，我们假定我们的系统符合</span><span
lang=EN-US>POSIX</span><span style='font-family:宋体'>标准。我们的</span><span
lang=EN-US>dir</span><span style='font-family:宋体'>函数接受一个代表目录路径的字符串作为参数，以数组的形式返回目录的内容。比如，调用</span><span
lang=EN-US>dir(&quot;/home/lua&quot;)</span><span style='font-family:宋体'>可能返回</span><span
lang=EN-US>{&quot;.&quot;, &quot;..&quot;, &quot;src&quot;, &quot;bin&quot;,
&quot;lib&quot;}</span><span style='font-family:宋体'>。当有错误发生的时候，函数返回</span><span
lang=EN-US>nil</span><span style='font-family:宋体'>加上一个描述错误信息的字符串。</span></p>

<div style='border:RGB(26,1,158) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(251,220,237);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>#include</span><span lang=EN-US> &lt;dirent.h&gt;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(224,227,227)'><span
lang=EN-US style='color:blue'>#include</span><span lang=EN-US> &lt;errno.h&gt;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(253,252,248)'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> <span
style='color:blue'>int</span> l_dir (lua_State *L) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; DIR *dir;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(246,249,247)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>struct</span> dirent
*entry;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>int</span> i;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(249,236,221)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>const</span> <span
style='color:blue'>char</span> *path = luaL_checkstring(L, 1);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(230,220,244)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:green'>/* open directory */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; dir = opendir(path);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(224,240,241)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>if</span> (dir == NULL)
{&nbsp;&nbsp; <span style='color:green'>/* error opening the directory? */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lua_pushnil(L);&nbsp;&nbsp; <span
style='color:green'>/* return nil and ... */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(230,220,227)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lua_pushstring(L,
strerror(errno)); <span style='color:green'>/* error message */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
2;&nbsp; <span style='color:green'>/* number of results */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(229,241,226)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; }</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(229,230,235)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:green'>/* create result table
*/</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; lua_newtable(L);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(241,233,232)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; i = 1;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>while</span> ((entry =
readdir(dir)) != NULL) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(227,246,242)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lua_pushnumber(L, i++);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>/* push key */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lua_pushstring(L,
entry-&gt;d_name);&nbsp; <span style='color:green'>/* push value */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(244,244,240)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lua_settable(L, -3);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; }</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(240,255,229)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; closedir(dir);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(239,233,237)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> 1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>/* table is already on top */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>辅助库的</span><span
lang=EN-US>luaL_checkstring</span><span style='font-family:宋体'>函数用来检测参数是否为字符串，与</span><span
lang=EN-US>luaL_checknumber</span><span style='font-family:宋体'>类似。（在极端情况下，上面的</span><span
lang=EN-US>l_dir</span><span style='font-family:宋体'>的实现可能会导致小的内存泄漏。调用的三个</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>函数</span><span lang=EN-US>lua_newtable</span><span
style='font-family:宋体'>、</span><span lang=EN-US>lua_pushstring</span><span
style='font-family:宋体'>和</span><span lang=EN-US>lua_settable</span><span
style='font-family:宋体'>可能由于没有足够的内存而失败。其中任何一个调用失败都会抛出错误并且终止</span><span
lang=EN-US>l_dir</span><span style='font-family:宋体'>，这种情况下，不会调用</span><span
lang=EN-US>closedir</span><span style='font-family:宋体'>。正如前面我们所讨论过的，对于大多数程序来说这不算个问题：如果程序导致内存不足，最好的处理方式是立即终止程序。另外，在</span><span
lang=EN-US>29</span><span style='font-family:宋体'>章我们将看到另外一种解决方案可以避免这个问题的发生）</span></p>


</div>
  <p></p>
  <hr class="moHR" />
  <span class="moCopyright">
    相关链接：
<br /><a href=3.htm>lua程序设计目录</a> - <a href="http://www.luaer.cn">中国lua开发者</a> - <a href="http://bbs.luaer.cn">lua论坛</a> 
  </span><div id="bookfoot"></div>
<script language="JavaScript" src="js/ad.js"></script>
</body>

</html>

