<html>

<head>
  <title>19.1 数组大小 - Lua程序设计</title>
  <meta http-equiv=Content-Type content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="default.css" type="text/css" />
</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="moHeader">&nbsp;19.1 数组大小</td>
    </tr>
  </table>
  
  <p></p>

<div class=Section1 style='layout-grid:15.6pt'>



<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Lua</span><span
style='font-family:宋体'>中我们经常假定</span><span lang=EN-US>array</span><span
style='font-family:宋体'>在最后一个非</span><span lang=EN-US>nil</span><span
style='font-family:宋体'>元素处结束。这个传统的约定有一个弊端：我们的</span><span lang=EN-US>array</span><span
style='font-family:宋体'>中不能拥有</span><span lang=EN-US>nil</span><span
style='font-family:宋体'>元素。对大部分应用来说这个限制不是什么问题，比如当所有的</span><span lang=EN-US>array</span><span
style='font-family:宋体'>有固定的类型的时候。但有些时候我们的</span><span lang=EN-US>array</span><span
style='font-family:宋体'>需要拥有</span><span lang=EN-US>nil</span><span
style='font-family:宋体'>元素，这种情况下，我们需要一种方法来明确的表明</span><span lang=EN-US>array</span><span
style='font-family:宋体'>的大小。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Table</span><span
style='font-family:宋体'>库定义了两个函数操纵</span><span lang=EN-US>array</span><span
style='font-family:宋体'>的大小：</span><span lang=EN-US>getn</span><span
style='font-family:宋体'>，返回</span><span lang=EN-US>array</span><span
style='font-family:宋体'>的大小；</span><span lang=EN-US>setn</span><span
style='font-family:宋体'>，设置</span><span lang=EN-US>array</span><span
style='font-family:宋体'>的大小。如前面我们所见到的，这两个方法和</span><span lang=EN-US>table</span><span
style='font-family:宋体'>的一个属性相关：要么我们在</span><span lang=EN-US>table</span><span
style='font-family:宋体'>的一个域中保存这个属性，要么我们使用一个独立的（</span><span lang=EN-US>weak</span><span
style='font-family:宋体'>）</span><span lang=EN-US>table</span><span
style='font-family:宋体'>来关联</span><span lang=EN-US>table</span><span
style='font-family:宋体'>和这个属性。两种方法各有利弊，所以</span><span lang=EN-US>table</span><span
style='font-family:宋体'>库使用了这两个方法。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>通常，调用</span><span
lang=EN-US>table.setn(t, n)</span><span style='font-family:宋体'>使得</span><span
lang=EN-US>t</span><span style='font-family:宋体'>和</span><span lang=EN-US>n</span><span
style='font-family:宋体'>在内部（</span><span lang=EN-US>weak</span><span
style='font-family:宋体'>）</span><span lang=EN-US>table</span><span
style='font-family:宋体'>关联，调用</span><span lang=EN-US>table.getn(t)</span><span
style='font-family:宋体'>将得到内部</span><span lang=EN-US>table</span><span
style='font-family:宋体'>中和</span><span lang=EN-US>t</span><span
style='font-family:宋体'>关联的那个值。然而，如果表</span><span lang=EN-US>t</span><span
style='font-family:宋体'>有一个带有数字值</span><span lang=EN-US>n</span><span
style='font-family:宋体'>的域，</span><span lang=EN-US>setn</span><span
style='font-family:宋体'>将修改这个值，而</span><span lang=EN-US>getn</span><span
style='font-family:宋体'>返回这个值。</span><span lang=EN-US>Getn</span><span
style='font-family:宋体'>函数还有一个选择：如果他不能使用上述方法返回</span><span lang=EN-US>array</span><span
style='font-family:宋体'>的大小，就会使用原始的方法：遍历</span><span lang=EN-US>array</span><span
style='font-family:宋体'>直到找到第一个</span><span lang=EN-US>nil</span><span
style='font-family:宋体'>元素。因此，你可以在</span><span lang=EN-US>array</span><span
style='font-family:宋体'>中一直使用</span><span lang=EN-US>table.getn(t)</span><span
style='font-family:宋体'>获得正确的结果。看例子：</span></p>

<div style='border:RGB(170,101,56) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(227,225,252)'><span
lang=EN-US>print(table.getn{10,2,4})&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;
3</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(table.getn{10,2,nil})&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;
2</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(253,238,244)'><span
lang=EN-US>print(table.getn{10,2,nil; n=3})&nbsp;&nbsp; --&gt; 3</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(table.getn{n=1000})&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;
1000</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(251,250,227)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>a = {}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(252,255,229)'><span
lang=EN-US>print(table.getn(a))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;
0</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>table.setn(a, 10000)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(245,251,238)'><span
lang=EN-US>print(table.getn(a))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;
10000</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(221,221,226)'><span
lang=EN-US>a = {n=10}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(table.getn(a))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;
10</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(225,239,243)'><span
lang=EN-US>table.setn(a, 10000)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(table.getn(a))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;
10000</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>默认的，</span><span
lang=EN-US>setn</span><span style='font-family:宋体'>和</span><span lang=EN-US>getn</span><span
style='font-family:宋体'>使用内部表存储表的大小。这是最干净的选择，因为它不会使用额外的元素污染</span><span
lang=EN-US>array</span><span style='font-family:宋体'>。然而，使用</span><span
lang=EN-US>n</span><span style='font-family:宋体'>域的方法也有一些优点。在带有可变参数的函数种，</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>内核使用这种方法设置</span><span
lang=EN-US>arg</span><span style='font-family:宋体'>数组的大小，因为内核不依赖于库，他不能使用</span><span
lang=EN-US>setn</span><span style='font-family:宋体'>。另外一个好处在于：我们可以在</span><span
lang=EN-US>array</span><span style='font-family:宋体'>创建的时候直接初始化他的大小，如我们在上面例子中看到的。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>使用</span><span
lang=EN-US>setn</span><span style='font-family:宋体'>和</span><span lang=EN-US>getn</span><span
style='font-family:宋体'>操纵</span><span lang=EN-US>array</span><span
style='font-family:宋体'>的大小是个好的习惯，即使你知道大小在域</span><span lang=EN-US>n</span><span
style='font-family:宋体'>中。</span><span lang=EN-US>table</span><span
style='font-family:宋体'>库中的所有函数（</span><span lang=EN-US>sort</span><span
style='font-family:宋体'>、</span><span lang=EN-US>concat</span><span
style='font-family:宋体'>、</span><span lang=EN-US>insert</span><span
style='font-family:宋体'>等等）都遵循这个习惯。实际上，提供</span><span lang=EN-US>setn</span><span
style='font-family:宋体'>用来改变域</span><span lang=EN-US>n</span><span
style='font-family:宋体'>的值可能只是为了与旧的</span><span lang=EN-US>lua</span><span
style='font-family:宋体'>版本兼容，这个特性可能在将来的版本中改变，为了安全起见，不要假定依赖于这个特性。请一直使用</span><span
lang=EN-US>getn</span><span style='font-family:宋体'>获取数组大小，使用</span><span
lang=EN-US>setn</span><span style='font-family:宋体'>设置数组大小。</span></p>


</div>
  <p></p>
  <hr class="moHR" />
  <span class="moCopyright">
    相关链接：
<br /><a href=3.htm>lua程序设计目录</a> - <a href="http://www.luaer.cn">中国lua开发者</a> - <a href="http://bbs.luaer.cn">lua论坛</a> 
  </span><div id="bookfoot"></div>
<script language="JavaScript" src="js/ad.js"></script>
</body>

</html>

