<html>

<head>
  <title>20.3 捕获（Captures） - Lua程序设计</title>
  <meta http-equiv=Content-Type content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="default.css" type="text/css" />
</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="moHeader">&nbsp;20.3 捕获（Captures）</td>
    </tr>
  </table>
  
  <p></p>

<div class=Section1 style='layout-grid:15.6pt'>



<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Capture<a
href="#_ftn5" name="_ftnref5" title=""><span class=MsoFootnoteReference><span
class=MsoFootnoteReference><span lang=EN-US style='font-size:10.5pt;font-family:
"Times New Roman","serif"'>[5]</span></span></span></a></span><span
style='font-family:宋体'>是这样一种机制：可以使用模式串的一部分匹配目标串的一部分。将你想捕获的模式用圆括号括起来，就指定了一个</span><span
lang=EN-US>capture</span><span style='font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>在</span><span
lang=EN-US>string.find</span><span style='font-family:宋体'>使用</span><span
lang=EN-US>captures</span><span style='font-family:宋体'>的时候，函数会返回捕获的值作为额外的结果。这常被用来将一个目标串拆分成多个：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(220,244,238)'><span
lang=EN-US>pair = <span style='color:red'>&quot;name = Anna&quot;</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>_, _, key, value = string.find(pair, <span style='color:red'>&quot;(%a+)%s*=%s*(%a+)&quot;</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(244,222,239)'><span
lang=EN-US>print(key, value)&nbsp;&nbsp;&nbsp; <span style='color:green'>--&gt;
name &nbsp;&nbsp;Anna</span></span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>'%a+' </span><span
style='font-family:宋体'>表示菲空的字母序列；</span><span lang=EN-US>'%s*' </span><span
style='font-family:宋体'>表示</span><span lang=EN-US>0</span><span
style='font-family:宋体'>个或多个空白。在上面的例子中，整个模式代表：一个字母序列，后面是任意多个空白，然后是</span><span
lang=EN-US> '=' </span><span style='font-family:宋体'>再后面是任意多个空白，然后是一个字母序列。两个字母序列都是使用圆括号括起来的子模式，当他们被匹配的时候，他们就会被捕获。当匹配发生的时候，</span><span
lang=EN-US>find</span><span style='font-family:宋体'>函数总是先返回匹配串的索引下标（上面例子中我们存储哑元变量</span><span
lang=EN-US> _ </span><span style='font-family:宋体'>中），然后返回子模式匹配的捕获部分。下面的例子情况类似：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(249,242,235)'><span
lang=EN-US>date = <span style='color:red'>&quot;17/7/1990&quot;</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>_, _, d, m, y = string.find(date, <span style='color:red'>&quot;(%d+)/(%d+)/(%d+)&quot;</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(229,246,247)'><span
lang=EN-US>print(d, m, y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>--&gt; 17&nbsp; 7&nbsp; 1990</span></span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>我们可以在模式中使用向前引用，</span><span
lang=EN-US>'%d'</span><span style='font-family:宋体'>（</span><span lang=EN-US>d</span><span
style='font-family:宋体'>代表</span><span lang=EN-US>1-9</span><span
style='font-family:宋体'>的数字）表示第</span><span lang=EN-US>d</span><span
style='font-family:宋体'>个捕获的拷贝。看个例子，假定你想查找一个字符串中单引号或者双引号引起来的子串，你可能使用模式</span><span
lang=EN-US> '[&quot;'].-[&quot;']'</span><span style='font-family:宋体'>，但是这个模式对处理类似字符串</span><span
lang=EN-US> &quot;it's all right&quot; </span><span style='font-family:宋体'>会出问题。为了解决这个问题，可以使用向前引用，使用捕获的第一个引号来表示第二个引号：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(240,253,236)'><span
lang=EN-US>s = [[<span style='color:blue'>then</span> he said: <span
style='color:red'>&quot;it's all right&quot;</span>!]]</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>a, b, c, quotedPart = string.find(s, <span style='color:red'>&quot;([&quot;</span>'])(.-)%1<span
style='color:red'>&quot;)</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(254,236,224)'><span
lang=EN-US style='color:red'>print(quotedPart)&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>--&gt; it's all right</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:red'>print(c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='color:green'>--&gt; &quot;</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>第一个捕获是引号字符本身，第二个捕获是引号中间的内容（</span><span
lang=EN-US>'.-' </span><span style='font-family:宋体'>匹配引号中间的子串）。</span><span
lang=EN-US> </span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>捕获值的第三个应用是用在函数</span><span
lang=EN-US>gsub</span><span style='font-family:宋体'>中。与其他模式一样，</span><span
lang=EN-US>gsub</span><span style='font-family:宋体'>的替换串可以包含</span><span
lang=EN-US> '%d'</span><span style='font-family:宋体'>，当替换发生时他被转换为对应的捕获值。（顺便说一下，由于存在这些情况，替换串中的字符</span><span
lang=EN-US> '%' </span><span style='font-family:宋体'>必须用</span><span lang=EN-US>
&quot;%%&quot; </span><span style='font-family:宋体'>表示）。下面例子中，对一个字符串中的每一个字母进行复制，并用连字符将复制的字母和原字母连接起来：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(246,240,239);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(string.gsub(<span style='color:red'>&quot;hello Lua!&quot;</span>,
<span style='color:red'>&quot;(%a)&quot;</span>, <span style='color:red'>&quot;%1-%1&quot;</span>))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(254,248,234)'><span
lang=EN-US style='color:green'>&nbsp;&nbsp;&nbsp; --&gt; h-he-el-ll-lo-o
L-Lu-ua-a!</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>下面代码互换相邻的字符</span><span
lang=EN-US>: </span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(250,220,231)'><span
lang=EN-US>print(string.gsub(<span style='color:red'>&quot;hello Lua&quot;</span>,
<span style='color:red'>&quot;(.)(.)&quot;</span>, <span style='color:red'>&quot;%2%1&quot;</span>))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:green'>--&gt;&nbsp; ehll ouLa</span></span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>让我们看一个更有用的例子，写一个格式转换器：从命令行获取</span><span
lang=EN-US>LaTeX</span><span style='font-family:宋体'>风格的字符串，形如：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(249,248,234);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>\command{some text}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>将它们转换为</span><span
lang=EN-US>XML</span><span style='font-family:宋体'>风格的字符串：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(239,244,232);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&lt;command&gt;some text&lt;/command&gt;</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>对于这种情况</span><span
lang=EN-US>,</span><span style='font-family:宋体'>下面的代码可以实现这个功能：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(244,226,230);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>s = string.gsub(s, <span style='color:red'>&quot;\\(%a+){(.-)}&quot;</span>,
<span style='color:red'>&quot;&lt;%1&gt;%2&lt;/%1&gt;&quot;</span>)</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>比如，如果字符串</span><span
lang=EN-US>s</span><span style='font-family:宋体'>为：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(220,255,237);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>the \quote{task} is to \em{change} that.</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>调用</span><span
lang=EN-US>gsub</span><span style='font-family:宋体'>之后，转换为：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(239,246,251);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>the &lt;quote&gt;task&lt;/quote&gt; is to change that.</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>另一个有用的例子是去除字符串首尾的空格：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(224,246,255);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> trim (s)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(236,232,246)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
(string.gsub(s, <span style='color:red'>&quot;^%s*(.-)%s*$&quot;</span>, <span
style='color:red'>&quot;%1&quot;</span>))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>注意模式串的用法，两个定位符（</span><span
lang=EN-US>'^' </span><span style='font-family:宋体'>和</span><span lang=EN-US>
'$'</span><span style='font-family:宋体'>）保证我们获取的是整个字符串。因为，两个</span><span
lang=EN-US> '%s*' </span><span style='font-family:宋体'>匹配首尾的所有空格，</span><span
lang=EN-US>'.-' </span><span style='font-family:宋体'>匹配剩余部分。还有一点需要注意的是</span><span
lang=EN-US>gsub</span><span style='font-family:宋体'>返回两个值，我们使用额外的圆括号丢弃多余的结果（替换发生的次数）。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>最后一个捕获值应用之处可能是功能最强大的。我们可以使用一个函数作为</span><span
lang=EN-US>string.gsub</span><span style='font-family:宋体'>的第三个参数调用</span><span
lang=EN-US>gsub</span><span style='font-family:宋体'>。在这种情况下，</span><span
lang=EN-US>string.gsub</span><span style='font-family:宋体'>每次发现一个匹配的时候就会调用给定的作为参数的函数，捕获值可以作为被调用的这个函数的参数，而这个函数的返回值作为</span><span
lang=EN-US>gsub</span><span style='font-family:宋体'>的替换串。先看一个简单的例子，下面的代码将一个字符串中全局变量</span><span
lang=EN-US>$varname</span><span style='font-family:宋体'>出现的地方替换为变量</span><span
lang=EN-US>varname</span><span style='font-family:宋体'>的值：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(245,231,250);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> expand (s)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(251,235,241)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; s = string.gsub(s, <span style='color:red'>&quot;$(%w+)&quot;</span>,
<span style='color:blue'>function</span> (n)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
_G[n]</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(251,220,222)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> s</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(249,225,237)'><span
lang=EN-US style='color:blue'>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(224,224,250)'><span
lang=EN-US>name = <span style='color:red'>&quot;Lua&quot;</span>; status = <span
style='color:red'>&quot;great&quot;</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(expand(<span style='color:red'>&quot;$name is $status, isn't
it?&quot;</span>))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(224,240,222)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:green'>--&gt; Lua is great, isn't it?</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>如果你不能确定给定的变量是否为</span><span
lang=EN-US>string</span><span style='font-family:宋体'>类型，可以使用</span><span
lang=EN-US>tostring</span><span style='font-family:宋体'>进行转换：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(246,230,249);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> expand (s)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(248,220,250)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
(string.gsub(s, <span style='color:red'>&quot;$(%w+)&quot;</span>, <span
style='color:blue'>function</span> (n)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
tostring(_G[n])</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(252,250,233)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span>))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(222,229,233)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(expand(<span style='color:red'>&quot;print = $print; a =
$a&quot;</span>))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(223,251,251)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:green'>--&gt; print = function: 0x8050ce0; a = nil</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>下面是一个稍微复杂点的例子，使用</span><span
lang=EN-US>loadstring</span><span style='font-family:宋体'>来计算一段文本内</span><span
lang=EN-US>$</span><span style='font-family:宋体'>后面跟着一对方括号内表达式的值：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(252,250,240);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>s = <span style='color:red'>&quot;sin(3) = $[math.sin(3)]; 2^5 =
$[2^5]&quot;</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(226,240,250)'><span
lang=EN-US>print((string.gsub(s, <span style='color:red'>&quot;$(%b[])&quot;</span>,
<span style='color:blue'>function</span> (x)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; x = <span style='color:red'>&quot;return &quot;</span>
.. string.sub(x, 2, -2)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(220,227,255)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>local</span> f = loadstring(x)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> f()</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(250,238,232)'><span
lang=EN-US style='color:blue'>end</span><span lang=EN-US>)))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(227,221,254)'><span
lang=EN-US style='color:green'>--&gt;&nbsp; sin(3) = 0.1411200080598672; 2^5 =
32</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>第一次匹配是</span><span
lang=EN-US> &quot;$[math.sin(3)]&quot;</span><span style='font-family:宋体'>，对应的捕获为</span><span
lang=EN-US> &quot;$[math.sin(3)]&quot;</span><span style='font-family:宋体'>，调用</span><span
lang=EN-US>string.sub</span><span style='font-family:宋体'>去掉首尾的方括号，所以被加载执行的字符串是</span><span
lang=EN-US> &quot;return math.sin(3)&quot;</span><span style='font-family:宋体'>，</span><span
lang=EN-US>&quot;$[2^5]&quot; </span><span style='font-family:宋体'>的匹配情况类似。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>我们常常需要使用</span><span
lang=EN-US>string.gsub</span><span style='font-family:宋体'>遍历字符串，而对返回结果不感兴趣。比如，我们收集一个字符串中所有的单词，然后插入到一个表中：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(243,250,225)'><span
lang=EN-US>words = {}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>string.gsub(s, <span style='color:red'>&quot;(%a+)&quot;</span>, <span
style='color:blue'>function</span> (w)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(244,238,254)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; table.insert(words, w)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span><span lang=EN-US>)</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>如果字符串</span><span
lang=EN-US>s</span><span style='font-family:宋体'>为</span><span lang=EN-US>
&quot;hello hi, again!&quot;</span><span style='font-family:宋体'>，上面代码的结果将是：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(234,238,254);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>{&quot;hello&quot;, &quot;hi&quot;, &quot;again&quot;}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>使用</span><span
lang=EN-US>string.gfind</span><span style='font-family:宋体'>函数可以简化上面的代码：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(227,238,248);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>words = {}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(235,242,245)'><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US> w <span
style='color:blue'>in</span> string.gfind(s, <span style='color:red'>&quot;(%a)&quot;</span>)
<span style='color:blue'>do</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; table.insert(words, w)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(234,251,250)'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>gfind</span><span
style='font-family:宋体'>函数比较适合用于范性</span><span lang=EN-US>for</span><span
style='font-family:宋体'>循环。他可以遍历一个字符串内所有匹配模式的子串。我们可以进一步的简化上面的代码，调用</span><span
lang=EN-US>gfind</span><span style='font-family:宋体'>函数的时候，如果不显示的指定捕获，函数将捕获整个匹配模式。所以，上面代码可以简化为：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(244,242,249)'><span
lang=EN-US>words = {}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>for</span><span lang=EN-US> w <span
style='color:blue'>in</span> string.gfind(s, <span style='color:red'>&quot;%a&quot;</span>)
<span style='color:blue'>do</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(254,244,233)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; table.insert(words, w)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>下面的例子我们使用</span><span
lang=EN-US>URL</span><span style='font-family:宋体'>编码，</span><span lang=EN-US>URL</span><span
style='font-family:宋体'>编码是</span><span lang=EN-US>HTTP</span><span
style='font-family:宋体'>协议来用发送</span><span lang=EN-US>URL</span><span
style='font-family:宋体'>中的参数进行的编码。这种编码将一些特殊字符（比如</span><span lang=EN-US> '='</span><span
style='font-family:宋体'>、</span><span lang=EN-US>'&amp;'</span><span
style='font-family:宋体'>、</span><span lang=EN-US>'+'</span><span
style='font-family:宋体'>）转换为</span><span lang=EN-US> &quot;%XX&quot; </span><span
style='font-family:宋体'>形式的编码，其中</span><span lang=EN-US>XX</span><span
style='font-family:宋体'>是字符的</span><span lang=EN-US>16</span><span
style='font-family:宋体'>进制表示，然后将空白转换成</span><span lang=EN-US> '+'</span><span
style='font-family:宋体'>。比如，将字符串</span><span lang=EN-US> &quot;a+b = c&quot; </span><span
style='font-family:宋体'>编码为</span><span lang=EN-US> &quot;a%2Bb+%3D+c&quot;</span><span
style='font-family:宋体'>。最后，将参数名和参数值之间加一个</span><span lang=EN-US> '='</span><span
style='font-family:宋体'>；在</span><span lang=EN-US>name=value</span><span
style='font-family:宋体'>对之间加一个</span><span lang=EN-US> &quot;&amp;&quot;</span><span
style='font-family:宋体'>。比如字符串：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(226,238,235);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>name = <span style='color:red'>&quot;al&quot;</span>;&nbsp; query = <span
style='color:red'>&quot;a+b = c&quot;</span>; &nbsp;q=<span style='color:red'>&quot;yes
or no&quot;</span></span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>被编码为：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(253,236,243);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>name=al&amp;query=a%2Bb+%3D+c&amp;q=yes+or+no</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>现在，假如我们想讲这</span><span
lang=EN-US>URL</span><span style='font-family:宋体'>解码并把每个值存储到表中，下标为对应的名字。下面的函数实现了解码功能：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(223,226,241);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> unescape (s)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(254,236,235)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; s = string.gsub(s, <span style='color:red'>&quot;+&quot;</span>,
<span style='color:red'>&quot; &quot;</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; s = string.gsub(s, <span style='color:red'>&quot;%%(%x%x)&quot;</span>,
<span style='color:blue'>function</span> (h)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(223,239,244)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
string.char(tonumber(h, 16))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(240,251,253)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> s</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>第一个语句将</span><span
lang=EN-US> '+' </span><span style='font-family:宋体'>转换成空白，第二个</span><span
lang=EN-US>gsub</span><span style='font-family:宋体'>匹配所有的</span><span
lang=EN-US> '%' </span><span style='font-family:宋体'>后跟两个数字的</span><span
lang=EN-US>16</span><span style='font-family:宋体'>进制数，然后调用一个匿名函数，匿名函数将</span><span
lang=EN-US>16</span><span style='font-family:宋体'>进制数转换成一个数字（</span><span
lang=EN-US>tonumber</span><span style='font-family:宋体'>在</span><span
lang=EN-US>16</span><span style='font-family:宋体'>进制情况下使用的）然后再转化为对应的字符。比如：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(239,252,236);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(unescape(<span style='color:red'>&quot;a%2Bb+%3D+c&quot;</span>))&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>--&gt; a+b = c</span></span></p>

</div>

<p class=MsoNormal style='text-indent:0cm'><span style='font-family:宋体'>对于</span><span
lang=EN-US>name=value</span><span style='font-family:宋体'>对，我们使用</span><span
lang=EN-US>gfind</span><span style='font-family:宋体'>解码，因为</span><span
lang=EN-US>names</span><span style='font-family:宋体'>和</span><span lang=EN-US>values</span><span
style='font-family:宋体'>都不能包含</span><span lang=EN-US> '&amp;' </span><span
style='font-family:宋体'>和</span><span lang=EN-US> '='</span><span
style='font-family:宋体'>我们可以用模式</span><span lang=EN-US> '[^&amp;=]+' </span><span
style='font-family:宋体'>匹配他们：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(230,227,230);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>cgi = {}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(248,226,235)'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> decode (s)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>for</span> name, value <span
style='color:blue'>in</span> string.gfind(s, <span style='color:red'>&quot;([^&amp;=]+)=([^&amp;=]+)&quot;</span>)
<span style='color:blue'>do</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(222,231,245)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name = unescape(name)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; value = unescape(value)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(234,223,221)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cgi[name] = value</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(235,251,245)'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>调用</span><span
lang=EN-US>gfind</span><span style='font-family:宋体'>函数匹配所有的</span><span
lang=EN-US>name=value</span><span style='font-family:宋体'>对，对于每一个</span><span
lang=EN-US>name=value</span><span style='font-family:宋体'>对，迭代子将其相对应的捕获的值返回给变量</span><span
lang=EN-US>name</span><span style='font-family:宋体'>和</span><span lang=EN-US>value</span><span
style='font-family:宋体'>。循环体内调用</span><span lang=EN-US>unescape</span><span
style='font-family:宋体'>函数解码</span><span lang=EN-US>name</span><span
style='font-family:宋体'>和</span><span lang=EN-US>value</span><span
style='font-family:宋体'>部分，并将其存储到</span><span lang=EN-US>cgi</span><span
style='font-family:宋体'>表中。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>与解码对应的编码也很容易实现。首先，我们写一个</span><span
lang=EN-US>escape</span><span style='font-family:宋体'>函数，这个函数将所有的特殊字符转换成</span><span
lang=EN-US> '%' </span><span style='font-family:宋体'>后跟字符对应的</span><span
lang=EN-US>ASCII</span><span style='font-family:宋体'>码转换成两位的</span><span
lang=EN-US>16</span><span style='font-family:宋体'>进制数字（不足两位，前面补</span><span
lang=EN-US>0</span><span style='font-family:宋体'>），然后将空白转换为</span><span
lang=EN-US> '+'</span><span style='font-family:宋体'>：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(235,238,221)'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> escape (s)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; s = string.gsub(s, <span style='color:red'>&quot;([&amp;=+%c])&quot;</span>,
<span style='color:blue'>function</span> (c)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(247,235,237)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
string.format(<span style='color:red'>&quot;%%%02X&quot;</span>, string.byte(c))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(242,240,239)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; s = string.gsub(s, <span style='color:red'>&quot;
&quot;</span>, <span style='color:red'>&quot;+&quot;</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> s</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(236,250,255)'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>编码函数遍历要被编码的表，构造最终的结果串：</span></p>

<div style='border:RGB(16,27,153) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(244,221,235)'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> encode (t)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>local</span> s = <span
style='color:red'>&quot;&quot;</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(233,233,231)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>for</span> k,v <span
style='color:blue'>in</span> pairs(t) <span style='color:blue'>do</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s = s .. <span
style='color:red'>&quot;&amp;&quot;</span> .. escape(k) .. <span
style='color:red'>&quot;=&quot;</span> .. escape(v)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(240,240,240)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
string.sub(s, 2)&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:green'>-- remove
first `&amp;'</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(251,221,252)'><span
lang=EN-US style='color:blue'>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>t = {name = <span style='color:red'>&quot;al&quot;</span>,&nbsp;
query = <span style='color:red'>&quot;a+b = c&quot;</span>, q=<span
style='color:red'>&quot;yes or no&quot;</span>}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(245,249,220)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(encode(t)) <span style='color:green'>--&gt;
q=yes+or+no&amp;query=a%2Bb+%3D+c&amp;name=al</span></span></p>

</div>


</div>
  <p></p>
  <hr class="moHR" />
  <span class="moCopyright">
    相关链接：
<br /><a href="_3.htm">lua程序设计目录</a> - <a href="http://www.luaer.cn">中国lua开发者</a> - <a href="http://bbs.luaer.cn">lua论坛</a> 
  </span><div id="bookfoot"></div>
<script language="JavaScript" src="js/ad.js"></script>
</body>

</html>

