<html>

<head>
  <title>13.2 关系运算的Metamethods - Lua程序设计</title>
  <meta http-equiv=Content-Type content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="default.css" type="text/css" />
</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="moHeader">&nbsp;13.2 关系运算的Metamethods</td>
    </tr>
  </table>
  
  <p></p>

<div class=Section1 style='layout-grid:15.6pt'>



<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Metatables</span><span
style='font-family:宋体'>也允许我们使用</span><span lang=EN-US>metamethods</span><span
style='font-family:宋体'>：</span><span lang=EN-US>__eq</span><span
style='font-family:宋体'>（等于），</span><span lang=EN-US>__lt</span><span
style='font-family:宋体'>（小于），和</span><span lang=EN-US>__le</span><span
style='font-family:宋体'>（小于等于）给关系运算符赋予特殊的含义。对剩下的三个关系运算符没有专门的</span><span
lang=EN-US>metamethod</span><span style='font-family:宋体'>，因为</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>将</span><span lang=EN-US>a ~=
b</span><span style='font-family:宋体'>转换为</span><span lang=EN-US>not (a == b)</span><span
style='font-family:宋体'>；</span><span lang=EN-US>a &gt; b</span><span
style='font-family:宋体'>转换为</span><span lang=EN-US>b &lt; a</span><span
style='font-family:宋体'>；</span><span lang=EN-US>a &gt;= b</span><span
style='font-family:宋体'>转换为</span><span lang=EN-US> b &lt;= a</span><span
style='font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>（直到</span><span
lang=EN-US>Lua 4.0</span><span style='font-family:宋体'>为止，所有的比较运算符被转换成一个，</span><span
lang=EN-US>a &lt;= b</span><span style='font-family:宋体'>转为</span><span
lang=EN-US>not (b &lt; a)</span><span style='font-family:宋体'>。然而这种转换并不一致正确。当我们遇到偏序（</span><span
lang=EN-US>partial order</span><span style='font-family:宋体'>）情况，也就是说，并不是所有的元素都可以正确的被排序情况。例如，在大多数机器上浮点数不能被排序，因为他的值不是一个数字（</span><span
lang=EN-US>Not a Number</span><span style='font-family:宋体'>即</span><span
lang=EN-US>NaN</span><span style='font-family:宋体'>）。根据</span><span lang=EN-US>IEEE
754</span><span style='font-family:宋体'>的标准，</span><span lang=EN-US>NaN</span><span
style='font-family:宋体'>表示一个未定义的值，比如</span><span lang=EN-US>0/0</span><span
style='font-family:宋体'>的结果。该标准指出任何涉及到</span><span lang=EN-US>NaN</span><span
style='font-family:宋体'>比较的结果都应为</span><span lang=EN-US>false</span><span
style='font-family:宋体'>。也就是说，</span><span lang=EN-US>NaN &lt;= x</span><span
style='font-family:宋体'>总是</span><span lang=EN-US>false</span><span
style='font-family:宋体'>，</span><span lang=EN-US>x &lt; NaN</span><span
style='font-family:宋体'>也总是</span><span lang=EN-US>false</span><span
style='font-family:宋体'>。这样一来，在这种情况下</span><span lang=EN-US>a &lt;= b </span><span
style='font-family:宋体'>转换为</span><span lang=EN-US> not (b &lt; a)</span><span
style='font-family:宋体'>就不再正确了。）</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>在我们关于基和操作的例子中，有类似的问题存在。</span><span
lang=EN-US>&lt;=</span><span style='font-family:宋体'>代表集合的包含：</span><span
lang=EN-US>a &lt;= b</span><span style='font-family:宋体'>表示集合</span><span
lang=EN-US>a</span><span style='font-family:宋体'>是集合</span><span lang=EN-US>b</span><span
style='font-family:宋体'>的子集。这种意义下，可能</span><span lang=EN-US>a &lt;= b</span><span
style='font-family:宋体'>和</span><span lang=EN-US>b &lt; a</span><span
style='font-family:宋体'>都是</span><span lang=EN-US>false</span><span
style='font-family:宋体'>；因此，我们需要将</span><span lang=EN-US>__le</span><span
style='font-family:宋体'>和</span><span lang=EN-US>__lt</span><span
style='font-family:宋体'>的实现分开：</span></p>

<div style='border:RGB(45,196,166) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(233,235,239)'><span
lang=EN-US>Set.mt.__le = <span style='color:blue'>function</span> (a,b)&nbsp;&nbsp;&nbsp; <span
style='color:green'>-- set containment</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>for</span> k <span
style='color:blue'>in</span> pairs(a) <span style='color:blue'>do</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(222,250,251)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:blue'>if</span>
<span style='color:blue'>not</span> b[k] <span style='color:blue'>then</span> <span
style='color:blue'>return</span> <span style='color:blue'>false</span> <span
style='color:blue'>end</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(228,241,246)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> <span
style='color:blue'>true</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(228,227,246)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>Set.mt.__lt = <span style='color:blue'>function</span> (a,b)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(224,246,230)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> a &lt;= b <span
style='color:blue'>and</span> <span style='color:blue'>not</span> (b &lt;= a)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>最后，我们通过集合的包含来定义集合相等：</span></p>

<div style='border:RGB(45,196,166) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(234,241,223);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>Set.mt.__eq = <span style='color:blue'>function</span> (a,b)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(249,224,230)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> a &lt;= b <span
style='color:blue'>and</span> b &lt;= a</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>有了上面的定义之后，现在我们就可以来比较集合了：</span></p>

<div style='border:RGB(45,196,166) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(239,243,250);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>s1 = Set.new{2, 4}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(246,247,225)'><span
lang=EN-US>s2 = Set.new{4, 10, 2}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(s1 &lt;= s2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>--&gt; true</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(220,223,220)'><span
lang=EN-US>print(s1 &lt; s2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>--&gt; true</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(s1 &gt;= s1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>--&gt; true</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(224,243,252)'><span
lang=EN-US>print(s1 &gt; s1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>--&gt; false</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>print(s1 == s2 * s1)&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:
green'>--&gt; true</span></span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>与算术运算的</span><span
lang=EN-US>metamethods</span><span style='font-family:宋体'>不同，关系元算的</span><span
lang=EN-US>metamethods</span><span style='font-family:宋体'>不支持混合类型运算。对于混合类型比较运算的处理方法和</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>的公共行为类似。如果你试图比较一个字符串和一个数字，</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>将抛出错误。相似的，如果你试图比较两个带有不同</span><span
lang=EN-US>metamethods</span><span style='font-family:宋体'>的对象，</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>也将抛出错误。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>但相等比较从来不会抛出错误，如果两个对象有不同的</span><span
lang=EN-US>metamethod</span><span style='font-family:宋体'>，比较的结果为</span><span
lang=EN-US>false</span><span style='font-family:宋体'>，甚至可能不会调用</span><span
lang=EN-US>metamethod</span><span style='font-family:宋体'>。这也是模仿了</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>的公共的行为，因为</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>总是认为字符串和数字是不等的，而不去判断它们的值。仅当两个有共同的</span><span
lang=EN-US>metamethod</span><span style='font-family:宋体'>的对象进行相等比较的时候，</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>才会调用对应的</span><span
lang=EN-US>metamethod</span><span style='font-family:宋体'>。</span></p>


</div>
  <p></p>
  <hr class="moHR" />
  <span class="moCopyright">
    相关链接：
<br /><a href="_3.htm">lua程序设计目录</a> - <a href="http://www.luaer.cn">中国lua开发者</a> - <a href="http://bbs.luaer.cn">lua论坛</a> 
  </span><div id="bookfoot"></div>
<script language="JavaScript" src="js/ad.js"></script>
</body>

</html>

