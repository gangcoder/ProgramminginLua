<html>

<head>
  <title>15.1 基本方法 - Lua程序设计</title>
  <meta http-equiv=Content-Type content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="default.css" type="text/css" />
</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="moHeader">&nbsp;15.1 基本方法</td>
    </tr>
  </table>
  
  <p></p>

<div class=Section1 style='layout-grid:15.6pt'>



<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>第一包的简单的方法是对包内的每一个对象前都加包名作为前缀。例如，假定我们正在写一个操作复数的库：我们使用表来表示复数，表有两个域</span><span
lang=EN-US>r</span><span style='font-family:宋体'>（实数部分）和</span><span lang=EN-US>i</span><span
style='font-family:宋体'>（虚数部分）。我们在另一张表中声明我们所有的操作来实现一个包：</span></p>

<div style='border:RGB(4,129,237) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(237,241,228)'><span
lang=EN-US>complex = {}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(237,247,246)'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> complex.new (r,
i) <span style='color:blue'>return</span> {r=r, i=i} <span style='color:blue'>end</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:green'>-- defines a constant `i'</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(252,246,252)'><span
lang=EN-US>complex.i = complex.new(0, 1)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(221,229,255)'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> complex.add (c1,
c2)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
complex.new(c1.r + c2.r, c1.i + c2.i)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(234,241,238)'><span
lang=EN-US style='color:blue'>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(224,227,255)'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> complex.sub (c1,
c2)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
complex.new(c1.r - c2.r, c1.i - c2.i)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(232,236,247)'><span
lang=EN-US style='color:blue'>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(232,220,250)'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> complex.mul (c1,
c2)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
complex.new(c1.r*c2.r - c1.i*c2.i,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(223,228,228)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c1.r*c2.i
+ c1.i*c2.r)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(242,243,247)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> complex.inv (c)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(227,243,233)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>local</span> n = c.r^2 +
c.i^2</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
complex.new(c.r/n, -c.i/n)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(238,244,229)'><span
lang=EN-US style='color:blue'>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(246,240,250)'><span
lang=EN-US style='color:blue'>return</span><span lang=EN-US> complex</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>这个库定义了一个全局名：</span><span
lang=EN-US>coplex</span><span style='font-family:宋体'>。其他的定义都是放在这个表内。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>有了上面的定义，我们就可以使用符合规范的任何复数操作了，如：</span></p>

<div style='border:RGB(4,129,237) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(231,247,239)'><span
lang=EN-US>c = complex.add(complex.i, complex.new(10, 20))</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>这种使用表来实现的包和真正的包的功能并不完全相同。首先，我们对每一个函数定义都必须显示的在前面加上包的名称。第二，同一包内的函数相互调用必须在被调用函数前指定包名。我们可以使用固定的局部变量名，来改善这个问题，然后，将这个局部变量赋值给最终的包。依据这个原则，我们重写上面的代码：</span></p>

<div style='border:RGB(4,129,237) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(235,224,250)'><span
lang=EN-US style='color:blue'>local</span><span lang=EN-US> P = {}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>complex = P&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>-- package name</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(238,243,239)'><span
lang=EN-US>P.i = {r=0, i=1}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> P.new (r, i) <span
style='color:blue'>return</span> {r=r, i=i} <span style='color:blue'>end</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(220,223,228)'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> P.add (c1, c2)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> P.new(c1.r
+ c2.r, c1.i + c2.i)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(253,244,233)'><span
lang=EN-US style='color:blue'>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>...</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>当在同一个包内的一个函数调用另一个函数的时候（或者她调用自身），他仍然需要加上前缀名。至少，它不再依赖于固定的包名。另外，只有一个地方需要包名。可能你注意到包中最后一个语句：</span></p>

<div style='border:RGB(4,129,237) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(234,224,251);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>return complex</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>这个</span><span
lang=EN-US>return</span><span style='font-family:宋体'>语句并非必需的，因为</span><span
lang=EN-US>package</span><span style='font-family:宋体'>已经赋值给全局变量</span><span
lang=EN-US>complex</span><span style='font-family:宋体'>了。但是，我们认为</span><span
lang=EN-US>package</span><span style='font-family:宋体'>打开的时候返回本身是一个很好的习惯。额外的返回语句并不会花费什么代价，并且提供了另一种操作</span><span
lang=EN-US>package</span><span style='font-family:宋体'>的可选方式。</span></p>


</div>
  <p></p>
  <hr class="moHR" />
  <span class="moCopyright">
    相关链接：
<br /><a href=3.htm>lua程序设计目录</a> - <a href="http://www.luaer.cn">中国lua开发者</a> - <a href="http://bbs.luaer.cn">lua论坛</a> 
  </span><div id="bookfoot"></div>
<script language="JavaScript" src="js/ad.js"></script>
</body>

</html>

