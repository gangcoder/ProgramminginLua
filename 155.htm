<html>

<head>
  <title>27.3.3 Upvalues - Lua程序设计</title>
  <meta http-equiv=Content-Type content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="default.css" type="text/css" />
</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="moHeader">&nbsp;27.3.3 Upvalues</td>
    </tr>
  </table>
  
  <p></p>

<div class=Section1 style='layout-grid:15.6pt'>



<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>registry </span><span
style='font-family:宋体'>实现了全局的值，</span><span lang=EN-US>upvalue</span><span
style='font-family:宋体'>机制实现了与</span><span lang=EN-US>C static</span><span
style='font-family:宋体'>变量等价的东东，这种变量只能在特定的函数内可见。每当你在</span><span lang=EN-US>Lua</span><span
style='font-family:宋体'>中创建一个新的</span><span lang=EN-US>C</span><span
style='font-family:宋体'>函数，你可以将这个函数与任意多个</span><span lang=EN-US>upvalues</span><span
style='font-family:宋体'>联系起来，每一个</span><span lang=EN-US>upvalue </span><span
style='font-family:宋体'>可以持有一个单独的</span><span lang=EN-US>Lua</span><span
style='font-family:宋体'>值。下面当函数被调用的时候，可以通过假索引自由的访问任何一个</span><span lang=EN-US>upvalues</span><span
style='font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>我们称这种一个</span><span
lang=EN-US>C</span><span style='font-family:宋体'>函数和她的</span><span lang=EN-US>upvalues</span><span
style='font-family:宋体'>的组合为闭包（</span><span lang=EN-US>closure</span><span
style='font-family:宋体'>）。记住：在</span><span lang=EN-US>Lua</span><span
style='font-family:宋体'>代码中，一个闭包是一个从外部函数访问局部变量的函数。一个</span><span lang=EN-US>C</span><span
style='font-family:宋体'>闭包与一个</span><span lang=EN-US>Lua</span><span
style='font-family:宋体'>闭包相近。关于闭包的一个有趣的事实是，你可以使用相同的函数代码创建不同的闭包，带有不同的</span><span
lang=EN-US>upvalues</span><span style='font-family:宋体'>。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>看一个简单的例子，我们在</span><span
lang=EN-US>C</span><span style='font-family:宋体'>中创建一个</span><span lang=EN-US>newCounter</span><span
style='font-family:宋体'>函数。（我们已经在</span><span lang=EN-US>6.1</span><span
style='font-family:宋体'>节部分在</span><span lang=EN-US>Lua</span><span
style='font-family:宋体'>中定义过同样的函数）。这个函数是个函数工厂：每次调用他都返回一个新的</span><span
lang=EN-US>counter</span><span style='font-family:宋体'>函数。尽管所有的</span><span
lang=EN-US>counters</span><span style='font-family:宋体'>共享相同的</span><span
lang=EN-US>C</span><span style='font-family:宋体'>代码，但是每个都保留独立的</span><span
lang=EN-US>counter</span><span style='font-family:宋体'>变量，工厂函数如下：</span></p>

<div style='border:RGB(13,214,147) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(237,253,249)'><span
lang=EN-US style='color:green'>/* forward declaration */</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> <span
style='color:blue'>int</span> counter (lua_State *L);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(225,248,222)'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>int</span><span lang=EN-US> newCounter (lua_State
*L) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(233,227,228)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; lua_pushnumber(L, 0);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; lua_pushcclosure(L, &amp;counter, 1);</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(232,238,234)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> 1;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>这里的关键函数是</span><span
lang=EN-US>lua_pushcclosure</span><span style='font-family:宋体'>，她的第二个参数是一个基本函数（例子中卫</span><span
lang=EN-US>counter</span><span style='font-family:宋体'>），第三个参数是</span><span
lang=EN-US>upvalues</span><span style='font-family:宋体'>的个数（例子中为</span><span
lang=EN-US>1</span><span style='font-family:宋体'>）。在创建新的闭包之前，我们必须将</span><span
lang=EN-US>upvalues</span><span style='font-family:宋体'>的初始值入栈，在我们的例子中，我们将数字</span><span
lang=EN-US>0</span><span style='font-family:宋体'>作为唯一的</span><span lang=EN-US>upvalue</span><span
style='font-family:宋体'>的初始值入栈。如预期的一样，</span><span lang=EN-US>lua_pushcclosure</span><span
style='font-family:宋体'>将新的闭包放到栈内，因此闭包已经作为</span><span lang=EN-US>newCounter</span><span
style='font-family:宋体'>的结果被返回。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>现在，我们看看</span><span
lang=EN-US>counter</span><span style='font-family:宋体'>的定义：</span></p>

<div style='border:RGB(13,214,147) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(239,222,243);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>static</span><span lang=EN-US> <span
style='color:blue'>int</span> counter (lua_State *L) {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(247,252,223)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>double</span> val =
lua_tonumber(L, lua_upvalueindex(1));</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; lua_pushnumber(L, ++val);&nbsp;&nbsp; <span
style='color:green'>/* new value */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(249,252,222)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; lua_pushvalue(L, -1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>/* duplicate it */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; lua_replace(L, lua_upvalueindex(1));&nbsp; <span
style='color:green'>/* update upvalue */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(248,235,254)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span> 1;&nbsp; <span
style='color:green'>/* return new value */</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>这里的关键函数是</span><span
lang=EN-US>lua_upvalueindex</span><span style='font-family:宋体'>（实际是一个宏），用来产生一个</span><span
lang=EN-US>upvalue </span><span style='font-family:宋体'>的假索引。这个假索引除了不在栈中之外，和其他的索引一样。表达式</span><span
lang=EN-US>lua_upvalueindex(1)</span><span style='font-family:宋体'>函数第一个</span><span
lang=EN-US>upvalue</span><span style='font-family:宋体'>的索引。因此，在函数</span><span
lang=EN-US>counter</span><span style='font-family:宋体'>中的</span><span
lang=EN-US>lua_tonumber</span><span style='font-family:宋体'>获取第一个</span><span
lang=EN-US>(</span><span style='font-family:宋体'>仅有的</span><span lang=EN-US>)upvalue</span><span
style='font-family:宋体'>的当前值，转换为数字型。然后，函数</span><span lang=EN-US>counter</span><span
style='font-family:宋体'>将新的值</span><span lang=EN-US>++val</span><span
style='font-family:宋体'>入栈，并将这个值的一个拷贝使用新的值替换</span><span lang=EN-US>upvalue</span><span
style='font-family:宋体'>。最后，返回其他的拷贝。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>与</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>闭包不同的是，</span><span
lang=EN-US>C</span><span style='font-family:宋体'>闭包不能共享</span><span lang=EN-US>upvalues</span><span
style='font-family:宋体'>：每一个闭包都有自己独立的变量集。然而，我们可以设置不同函数的</span><span lang=EN-US>upvalues</span><span
style='font-family:宋体'>指向同一个表，这样这个表就变成了一个所有函数共享数据的地方。</span></p>

<p class=MsoNormal style='text-indent:0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:0cm'><span lang=EN-US>&nbsp;</span></p>

</div>

<span lang=EN-US style='font-size:10.5pt;font-family:"Times New Roman","serif"'><br
clear=all style='page-break-before:always'>
</span>

<div class=Section38 style='layout-grid:15.6pt 0pt'>


</div>
  <p></p>
  <hr class="moHR" />
  <span class="moCopyright">
    相关链接：
<br /><a href=3.htm>lua程序设计目录</a> - <a href="http://www.luaer.cn">中国lua开发者</a> - <a href="http://bbs.luaer.cn">lua论坛</a> 
  </span><div id="bookfoot"></div>
<script language="JavaScript" src="js/ad.js"></script>
</body>

</html>

