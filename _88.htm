<html>

<head>
  <title>14.2 声明全局变量 - Lua程序设计</title>
  <meta http-equiv=Content-Type content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="default.css" type="text/css" />
</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="moHeader">&nbsp;14.2 声明全局变量</td>
    </tr>
  </table>
  
  <p></p>

<div class=Section1 style='layout-grid:15.6pt'>



<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>全局变量不需要声明，虽然这对一些小程序来说很方便，但程序很大时，一个简单的拼写错误可能引起</span><span
lang=EN-US>bug</span><span style='font-family:宋体'>并且很难发现。然而，如果我们喜欢，我们可以改变这种行为。因为</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>所有的全局变量都保存在一个普通的表中，我们可以使用</span><span
lang=EN-US>metatables</span><span style='font-family:宋体'>来改变访问全局变量的行为。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>第一个方法如下：</span></p>

<div style='border:RGB(196,159,169) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(251,244,252)'><span
lang=EN-US>setmetatable(_G, {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; __newindex = <span style='color:blue'>function</span>
(_, n)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(236,226,250)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; error(<span style='color:red'>&quot;attempt
to write to undeclared variable &quot;</span>..n, 2)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span>,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(237,235,236)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; </span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; __index = <span style='color:blue'>function</span>
(_, n)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(235,240,233)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; error(<span style='color:red'>&quot;attempt
to read undeclared variable &quot;</span>..n, 2)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span>,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(244,254,252)'><span
lang=EN-US>})</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>这样一来，任何企图访问一个不存在的全局变量的操作都会引起错误：</span></p>

<div style='border:RGB(196,159,169) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(243,230,240)'><span
lang=EN-US>&gt; a = 1</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>stdin:1: attempt to write to undeclared variable a</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>但是我们如何声明一个新的变量呢？使用</span><span
lang=EN-US>rawset</span><span style='font-family:宋体'>，可以绕过</span><span
lang=EN-US>metamethod</span><span style='font-family:宋体'>：</span></p>

<div style='border:RGB(196,159,169) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(244,224,230);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> declare (name,
initval)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(250,242,223)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; rawset(_G, name, initval <span style='color:blue'>or</span>
<span style='color:blue'>false</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>or </span><span
style='font-family:宋体'>带有</span><span lang=EN-US> false </span><span
style='font-family:宋体'>是为了保证新的全局变量不会为</span><span lang=EN-US> nil</span><span
style='font-family:宋体'>。注意：你应该在安装访问控制以前（</span><span lang=EN-US>before
installing the access control</span><span style='font-family:宋体'>）定义这个函数，否则将得到错误信息：毕竟你是在企图创建一个新的全局声明。只要刚才那个函数在正确的地方，你就可以控制你的全局变量了：</span></p>

<div style='border:RGB(196,159,169) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(223,251,254);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&gt; a = 1</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(236,247,228)'><span
lang=EN-US>stdin:1: attempt to write to undeclared variable a</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&gt; declare <span style='color:red'>&quot;a&quot;</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(233,238,244)'><span
lang=EN-US>&gt; a = 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:green'>-- OK</span></span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>但是现在，为了测试一个变量是否存在，我们不能简单的比较他是否为</span><span
lang=EN-US>nil</span><span style='font-family:宋体'>。如果他是</span><span lang=EN-US>nil</span><span
style='font-family:宋体'>访问将抛出错误。所以，我们使用</span><span lang=EN-US>rawget</span><span
style='font-family:宋体'>绕过</span><span lang=EN-US>metamethod</span><span
style='font-family:宋体'>：</span></p>

<div style='border:RGB(196,159,169) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(222,225,224)'><span
lang=EN-US style='color:blue'>if</span><span lang=EN-US> rawget(_G, var) == <span
style='color:blue'>nil</span> <span style='color:blue'>then</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:green'>-- 'var' is undeclared</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(250,253,254)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; ...</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>改变控制允许全局变量可以为</span><span
lang=EN-US>nil</span><span style='font-family:宋体'>也不难，所有我们需要的是创建一个辅助表用来保存所有已经声明的变量的名字。不管什么时候</span><span
lang=EN-US>metamethod</span><span style='font-family:宋体'>被调用的时候，他会检查这张辅助表看变量是否已经存在。代码如下：</span></p>

<div style='border:RGB(196,159,169) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:RGB(242,246,252);margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>local</span><span lang=EN-US> declaredNames = {}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(221,251,230)'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> declare (name,
initval)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; rawset(_G, name, initval)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(242,223,227)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; declaredNames[name] = <span style='color:blue'>true</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(220,225,232)'><span
lang=EN-US>setmetatable(_G, {</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; __newindex = <span style='color:blue'>function</span>
(t, n, v)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(236,251,223)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>if</span> <span
style='color:blue'>not</span> declaredNames[n] <span style='color:blue'>then</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; error(<span style='color:red'>&quot;attempt
to write to undeclared var. &quot;</span>..n, 2)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(239,255,230)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>else</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rawset(t, n, v)&nbsp;&nbsp; <span
style='color:green'>-- do the actual set</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(239,250,242)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:blue'>end</span><span lang=EN-US>,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(230,223,220)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; __index = <span style='color:blue'>function</span>
(_, n)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>if</span> <span
style='color:blue'>not</span> declaredNames[n] <span style='color:blue'>then</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(246,232,250)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; error(<span style='color:red'>&quot;attempt
to read undeclared var. &quot;</span>..n, 2)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>else</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(229,224,233)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:blue'>return</span>
<span style='color:blue'>nil</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(233,231,226)'><span
lang=EN-US style='color:blue'>end</span><span lang=EN-US>,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>})</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>两种实现方式，代价都很小可以忽略不计的。第一种解决方法：</span><span
lang=EN-US>metamethods</span><span style='font-family:宋体'>在平常操作中不会被调用。第二种解决方法：他们可能被调用，不过当且仅当访问一个值为</span><span
lang=EN-US>nil</span><span style='font-family:宋体'>的变量时。</span></p>


</div>
  <p></p>
  <hr class="moHR" />
  <span class="moCopyright">
    相关链接：
<br /><a href="_3.htm">lua程序设计目录</a> - <a href="http://www.luaer.cn">中国lua开发者</a> - <a href="http://bbs.luaer.cn">lua论坛</a> 
  </span><div id="bookfoot"></div>
<script language="JavaScript" src="js/ad.js"></script>
</body>

</html>

