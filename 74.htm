<html>

<head>
  <title>12.1.1 保存不带循环的table - Lua程序设计</title>
  <meta http-equiv=Content-Type content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="default.css" type="text/css" />
</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="moHeader">&nbsp;12.1.1 保存不带循环的table</td>
    </tr>
  </table>
  
  <p></p>

<div class=Section1 style='layout-grid:15.6pt'>



<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>我们下一个艰巨的任务是保存表。根据表的结构不同，采取的方法也有很多。没有一种单一的算法对所有情况都能很好地解决问题。简单的表不仅需要简单的算法而且输出文件也需要看起来美观。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>我们第一次尝试如下：</span></p>

<div style='border:RGB(104,64,237) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(222,237,251)'><span
lang=EN-US style='color:blue'>function</span><span lang=EN-US> serialize (o)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>if</span> type(o) == <span
style='color:red'>&quot;number&quot;</span> <span style='color:blue'>then</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(234,244,232)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; io.write(o)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>elseif</span> type(o) ==
<span style='color:red'>&quot;string&quot;</span> <span style='color:blue'>then</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(255,224,240)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; io.write(string.format(<span
style='color:red'>&quot;%q&quot;</span>, o))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>elseif</span> type(o) ==
<span style='color:red'>&quot;table&quot;</span> <span style='color:blue'>then</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(233,222,229)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; io.write(<span
style='color:red'>&quot;{\n&quot;</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:blue'>for</span>
k,v <span style='color:blue'>in</span> pairs(o) <span style='color:blue'>do</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(254,233,223)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; io.write(<span
style='color:red'>&quot; &quot;</span>, k, <span style='color:red'>&quot; =
&quot;</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; serialize(v)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(233,241,246)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; io.write(<span
style='color:red'>&quot;,\n&quot;</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(239,239,244)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; io.write(<span
style='color:red'>&quot;}\n&quot;</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>else</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(229,231,233)'><span
lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; error(<span style='color:red'>&quot;cannot
serialize a &quot;</span> .. type(o))</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;&nbsp;&nbsp; <span style='color:blue'>end</span></span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(253,230,255)'><span
lang=EN-US style='color:blue'>end</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>尽管代码很简单，但很好地解决了问题。只要表结构是一个树型结构（也就是说，没有共享的子表并且没有循环），上面代码甚至可以处理嵌套表（表中表）。对于所进不整齐的表我们可以少作改进使结果更美观，这可以作为一个练习尝试一下。（提示：增加一个参数表示缩进的字符串，来进行序列化）。前面的函数假定表中出现的所有关键字都是合法的标示符。如果表中有不符合</span><span
lang=EN-US>Lua</span><span style='font-family:宋体'>语法的数字关键字或者字符串关键字，上面的代码将碰到麻烦。一个简单的解决这个难题的方法是将：</span></p>

<div style='border:RGB(104,64,237) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(254,241,245)'><span
lang=EN-US>io.write(<span style='color:red'>&quot; &quot;</span>, k, <span
style='color:red'>&quot; = &quot;</span>)</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>改为</span></p>

<div style='border:RGB(104,64,237) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(235,252,232)'><span
lang=EN-US>io.write(<span style='color:red'>&quot; [&quot;</span>)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>serialize(k)</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(249,225,230)'><span
lang=EN-US>io.write(<span style='color:red'>&quot;] = &quot;</span>)</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>这样一来，我们改善了我们的函数的健壮性，比较一下两次的结果：</span></p>

<div style='border:RGB(104,64,237) dashed 1px;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#fff;margin-left:21.0pt;margin-right:21.0pt'>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(235,237,225)'><span
lang=EN-US style='color:green'>-- result of serialize{a=12, b='Lua',
key='another &quot;one&quot;'}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US style='color:green'>-- </span><span style='font-family:宋体;
color:green'>第一个版本</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(245,239,222)'><span
lang=EN-US>{</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>a = 12,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(250,229,253)'><span
lang=EN-US>b = <span style='color:red'>&quot;Lua&quot;</span>,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>key = <span style='color:red'>&quot;another \&quot;one\&quot;&quot;</span>,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(233,227,239)'><span
lang=EN-US>}</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>&nbsp;</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(230,247,247)'><span
lang=EN-US style='color:green'>-- </span><span style='font-family:宋体;
color:green'>第二个版本</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>{</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(242,251,222)'><span
lang=EN-US>[<span style='color:red'>&quot;a&quot;</span>] = 12,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>[<span style='color:red'>&quot;b&quot;</span>] = <span
style='color:red'>&quot;Lua&quot;</span>,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:RGB(234,224,233)'><span
lang=EN-US>[<span style='color:red'>&quot;key&quot;</span>] = <span
style='color:red'>&quot;another \&quot;one\&quot;&quot;</span>,</span></p>

<p class=AltD style='margin:0cm;margin-bottom:.0001pt;background:#fff'><span
lang=EN-US>}</span></p>

</div>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:宋体'>我们可以通过测试每一种情况，看是否需要方括号，另外，我们将这个问题留作一个练习给大家。</span></p>


</div>
  <p></p>
  <hr class="moHR" />
  <span class="moCopyright">
    相关链接：
<br /><a href=3.htm>lua程序设计目录</a> - <a href="http://www.luaer.cn">中国lua开发者</a> - <a href="http://bbs.luaer.cn">lua论坛</a> 
  </span><div id="bookfoot"></div>
<script language="JavaScript" src="js/ad.js"></script>
</body>

</html>

